# AFS WebDAV Gateway: lighttpd primary config
# dynamic configuration generated from parent environment

server.tag           = "AFS/WebDAV"
server.use-ipv6      = "disable"
server.bind          = "0.0.0.0"
server.port          = 80
server.username      = "nobody"
server.groupname     = "nobody"
server.document-root = env.DAV_BASE + "/www/frontend"
server.errorlog      = env.DAV_BASE + "/run/frontend.err"
server.pid-file      = env.DAV_BASE + "/run/frontend.pid"
server.modules       = ( "mod_access", "mod_setenv", "mod_alias", "mod_redirect",
                         "mod_magnet", "mod_auth", "mod_proxy_core", "mod_proxy_backend_http" )
server.max-keep-alive-idle = 300
server.max-keep-alive-requests = 1000000
server.max-worker = 2

$PHYSICAL["path"] =~ "^" + env.DAV_BASE + "/run($|/)" {
    access.deny-all = "enable"
}
alias.url = ( "/share" => env.DAV_BASE + "/www/share/" )
setenv.add-environment = ( "DAV_BASE" => env.DAV_BASE )
var.include_conf = env.DAV_BASE + "/etc/lighttpd_conf"
include_shell include_conf

auth.backend = "gssapi"
auth.backend.gssapi.passwd = "enable"
$HTTP["useragent"] =~ "^(Microsoft|WebDAVFS)" {
    auth.backend.gssapi.spnego = "disable"
}
auth.backend.gssapi.principal = "HTTP"

$SERVER["socket"] == "0.0.0.0:80" {
    ssl.engine = "disable"
    index-file.names = ( "index.html" )
    dir-listing.activate = "enable"
    dir-listing.hide-dotfiles = "enable"
    $PHYSICAL["path"] =~ "^" + env.DAV_BASE + "/www/backend($|/)" {
        access.deny-all = "enable"
    }
}

$SERVER["socket"] == "0.0.0.0:443" {
    ssl.engine = "enable"
    ssl.use-sslv2 = "disable"
    ssl.pemfile = "/etc/pki/tls/private/" + var.HOSTNAME + ".pem"
    ssl.ca-file = env.DAV_BASE + "/lib/ssl/mitCAclient.pem"
}

$SERVER["socket"] == "0.0.0.0:444" {
    ssl.engine = "enable"
    ssl.use-sslv2 = "disable"
    ssl.pemfile = "/etc/pki/tls/private/" + var.HOSTNAME + ".pem"
    ssl.ca-file = env.DAV_BASE + "/lib/ssl/mitCAclient.pem"
    ssl.verifyclient.activate  = "enable"
    ssl.verifyclient.enforce   = "enable"
    ssl.verifyclient.depth     = 1
    ssl.verifyclient.username  = "SSL_CLIENT_S_DN_emailAddress"
}

proxy-core.allow-x-rewrite = "enable"
proxy-core.balancer = "static"
proxy-core.disable-time = 0
proxy-core.max-backlog-size = 16
proxy-core.max-keep-alive-requests = 1000000
proxy-core.max-pool-size = 16
proxy-core.protocol = "http"
proxy-core.rewrite-response = (
    "Location" => ( "^http://(.+)" => "https://$1" )
)

$HTTP["scheme"] == "https" {
    $HTTP["url"] !~ "^/share/" {
        magnet.attract-raw-url-to += ( env.DAV_BASE + "/lib/lua/frontend-pre.lua" )
        auth.require = ( "" => ( "method" => "gssapi", "realm" => "ATHENA.MIT.EDU", "require" => "valid-user"))
        magnet.attract-physical-path-to += ( env.DAV_BASE + "/lib/lua/frontend.lua" )
        proxy-core.backends = ( "127.0.0.1:1" )
    }
}

var.include_mime = env.DAV_BASE + "/etc/lighttpd_mime"
include_shell include_mime
mimetype.assign += ( "" => "text/plain" )
